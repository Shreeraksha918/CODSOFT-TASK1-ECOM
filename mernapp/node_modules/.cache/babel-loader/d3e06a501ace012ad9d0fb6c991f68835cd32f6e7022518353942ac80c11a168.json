{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://localhost:5000/api/createuser\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: credentials.email,\n        password: credentials.password\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    if (!json.success) {\n      alert(\"Enter valid credentials\");\n    }\n  };\n  const onChange = event => {\n    setCredentials({\n      ...credentials,\n      [event.target.name]: event.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Login, \"8RbK+HiscEA366qubR+mvq8/mP0=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","Login","_s","credentials","setCredentials","email","password","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","json","console","log","success","alert","onChange","event","target","name","value","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/gofood/mernapp/src/screens/Login.js"],"sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function Login() {\r\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\"});\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const response = await fetch(\"http://localhost:5000/api/createuser\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ email: credentials.email, password: credentials.password })\r\n        });\r\n        const json = await response.json();\r\n        console.log(json);\r\n        if (!json.success) {\r\n            alert(\"Enter valid credentials\");\r\n        }\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        setCredentials({ ...credentials, [event.target.name]: event.target.value });\r\n    };\r\n\r\n  return (\r\n    <>\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC;IAAES,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAE,CAAC,CAAC;EAExE,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEX,KAAK,EAAEF,WAAW,CAACE,KAAK;QAAEC,QAAQ,EAAEH,WAAW,CAACG;MAAS,CAAC;IACrF,CAAC,CAAC;IACF,MAAMW,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,IAAI,CAACA,IAAI,CAACG,OAAO,EAAE;MACfC,KAAK,CAAC,yBAAyB,CAAC;IACpC;EACJ,CAAC;EAED,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IACxBnB,cAAc,CAAC;MAAE,GAAGD,WAAW;MAAE,CAACoB,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/E,CAAC;EAEH,oBACE1B,OAAA,CAAAF,SAAA,mBACE,CAAC;AAEP;AAACI,EAAA,CA3BuBD,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}